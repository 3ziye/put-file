name: Deploy to Server

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy (e.g., v1.0.0)'
        required: true

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine version
        id: determine_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          else
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          fi
      - name: Download Linux binary
        run: |
          # 创建临时目录
          mkdir -p deployment
          cd deployment
          
          # 下载Linux amd64版本的二进制文件
          wget -O put-file_linux_amd64.tar.gz https://github.com/3ziye/put-file/releases/download/${{ env.VERSION }}/put-file_${{ env.VERSION }}_linux_amd64.tar.gz
          
          # 解压文件
          tar -xzf put-file_linux_amd64.tar.gz
          
          # 设置执行权限
          chmod +x put-file
          
          # 创建部署所需的其他文件
          echo "部署版本: ${{ env.VERSION }}
部署时间: $(date)" > deployment_info.txt
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_SERVER_HOST }}
          username: ${{ secrets.DEPLOY_SERVER_USERNAME }}
          key: ${{ secrets.DEPLOY_SERVER_SSH_KEY }}
          port: ${{ secrets.DEPLOY_SERVER_PORT || '22' }}
          script: |
            # 定义部署目录
            DEPLOY_DIR="/opt/put-file"
            
            # 确保部署目录存在
            if [ ! -d "$DEPLOY_DIR" ]; then
              sudo mkdir -p "$DEPLOY_DIR"
              sudo chown -R ${{ secrets.DEPLOY_SERVER_USERNAME }}:$USER "$DEPLOY_DIR"
            fi
            
            # 备份当前版本
            if [ -f "$DEPLOY_DIR/put-file" ]; then
              BACKUP_DIR="$DEPLOY_DIR/backups/$(date +%Y%m%d%H%M%S)"
              mkdir -p "$BACKUP_DIR"
              cp -a "$DEPLOY_DIR/put-file" "$BACKUP_DIR/"
              if [ -f "$DEPLOY_DIR/config.json" ]; then
                cp -a "$DEPLOY_DIR/config.json" "$BACKUP_DIR/"
              fi
              echo "已备份当前版本到 $BACKUP_DIR"
            fi
            
            # 上传新版本文件
            scp -P ${{ secrets.DEPLOY_SERVER_PORT || '22' }} -i ${{ secrets.DEPLOY_SERVER_SSH_KEY }} deployment/put-file deployment/deployment_info.txt ${{ secrets.DEPLOY_SERVER_USERNAME }}@${{ secrets.DEPLOY_SERVER_HOST }}:$DEPLOY_DIR/
            
            # 重启服务
            echo "重启put-file服务..."
            if command -v systemctl &> /dev/null; then
              if sudo systemctl is-active --quiet put-file; then
                sudo systemctl stop put-file
                sudo systemctl start put-file
              else
                echo "put-file服务未运行，尝试启动..."
                sudo systemctl start put-file || echo "服务启动失败，请手动检查"
              fi
            else
              # 如果没有systemd，尝试使用其他方式重启
              echo "警告: 未找到systemd，使用简单重启方式"
              pkill -f put-file || echo "没有正在运行的put-file进程"
              cd "$DEPLOY_DIR" && nohup ./put-file > /dev/null 2>&1 &
            fi
            
            # 清理
            echo "部署完成，版本: ${{ env.VERSION }}"
      - name: Cleanup
        run: |
          # 清理临时文件
          rm -rf deployment